"""
0. Audit
1. Develop Plan For Cleaning
2. Write Code to Clean


AUDIT PLAN
- Inspect keys
    - Total: 736 keys
    - Unique* (not compound): <- Split on : and create object tree with counts
        - PURPOSE: Identify where most of the data is; target areas to clean

"""






Problems encountered in your map
Overview of the Data
Other ideas about the datasets

SPECIFIC TO SOMERSVILLE DATASET
Before getting started we have to narrow down our dataset for this project

Steps
    0. Identify keys and count keys
    1. Determine build of MongoDB document
        - most frequent keys
        - most important keys


PHASE 1: Audit the Dataset
(validity, accuracy, completeness, consistency and uniformity)
Programmatically check your data using validation rules you've written
Run statistical tests to check for outliers

Accomplish Five Things
  1. Auditing Validity
  2. Auditing a Cross-Field Constraint (Consistency)
  3. Auditing Accuracy (against a gold standard)
  4. Auditing Completeness
  5. Auditing Uniformity


**Auditing Validity**
Auditing validating is about determining what the constraints are for individual fields and checking to ensure the field values adhere to those constraints.


Steps to Check
  Concerned about individual fields
  Mandatory values
  Foreign-key constraints
  Cross-field constraints (conditions on multiple fields)
  Data Type
  Structure
  Pattern testing (REGEX!)
  Ranges - Bounds checkings
  Set membership (t-shirts must be S, M, L, LL)






PHASE 2: Develop Data Cleaning Plan
    0. Identify desired pattern
    1. Analyze problems occurring
        - Think about the particular problems that a field could have; things that could wrong with a particular type of field
    1. Rigorous value testing
        - Regex testing for common mis-patterns
        - Range testing
        - Removing typographical errors
        - Validating against known entities
        - Cross checking with other datasets
    2. Harmonize Data
        - Transforming shortened words to full words


